---
# initialize database
- name: Copy script to initialize database 
  copy: 
    src: tmp/tables.sql
    dest: /tmp/tables.sql
    owner: postgres
    group: postgres

- name: Execute script to initialize DB tables
  shell: "sudo -u postgres psql -v ON_ERROR_STOP -d sked -f /tmp/tables.sql"

- name: Delete remote script
  file: 
    path: "/tmp/tables.sql"
    state: absent

- name: Copy script to grant privileges
  copy: 
    src: tmp/grant.sql
    dest: /tmp/grant.sql
    owner: postgres
    group: postgres

- name: Execute script to grant privileges
  shell: "sudo -u postgres psql -v ON_ERROR_STOP -d sked -f /tmp/grant.sql"

- name: Delete remote script
  file: 
    path: "/tmp/grant.sql"
    state: absent

- name: Get timestamp
  shell: 'date --utc  +"%F %T %Z"'
  register: tstamp

- name: Show timestamp
  debug:
    msg:
      - "{{ tstamp.stdout }}"

- name: Set current datetime variable
  set_fact: 
    current_datetime: "{{ tstamp.stdout }}"

- name: Generate uuid for Admin
  set_fact:
    sked_admin_uuid: "{{ (999999999999999999999 | random | string + ansible_date_time.iso8601_micro) | to_uuid()  }}"

- name: admin uuid
  debug:
    msg:
      - "{{ sked_admin_uuid }}" 

- name: Template for creating first user (admin)
  template:
    src: tmp/addAdmin.sql.d2
    dest: /tmp/addAdmin.sql
    owner: postgres
    group: postgres

- name: Execute script
  shell: "sudo -u postgres psql -v ON_ERROR_STOP -d sked -f /tmp/addAdmin.sql"

- name: Delete remote script
  file:
    path: "/tmp/addAdmin.sql"
    state: absent

- name: Set expiration date for admin email confirmation token
  shell: 'date --utc  +"%F %T %Z" -d "+1 hour"'
  register: texpiration

- name: Show expiration date
  debug:
    msg:
      - "{{ texpiration.stdout }}"

- name: Set expiration time variable
  set_fact:
    token_expiration_datetime: "{{ texpiration.stdout }}"

- name: Create a random token id
  set_fact:
    token_id: "{{ lookup('password', '/dev/null chars=ascii_lowercase,digits length=40') }}"

- name: random token id
  debug: 
    msg:
      - "{{ token_id }}"

- name: Template for adding token for admin email confirmation
  template:
    src: tmp/addAdminToken.sql.d2
    dest: /tmp/addAdminToken.sql
    owner: postgres
    group: postgres

- name: Execute script
  shell: "sudo -u postgres psql -v ON_ERROR_STOP -d sked -f /tmp/addAdminToken.sql"

- name: Delete token sql script
  file:
    path: "/tmp/addAdminToken.sql"
    state: absent

- name: display link to confirm admin email
  debug:
    msg:
      - "Open the following link in your browser:"
      - "https://{{ webserver_name }}/api/users/validateEmail?token={{ token_id }}"
